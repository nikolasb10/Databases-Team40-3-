/*triggers*/ 
	/*Researcher triggers*/ 
    delimiter //   
	create trigger res_chek_bf BEFORE INSERT ON researcher 
	 for each row
	 BEGIN 
	  IF (NEW.researcher_id  IN (
	   SELECT researcher_id FROM researcher)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Researcher ID already Exists';
	  ELSEIF (NEW.organization_name  NOT IN (
	   SELECT organization_name FROM organization)) 
		THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Organization doesnt exist';
	  ELSEIF( NEW.Date_of_Birth >= (DATE_ADD(CURDATE(), INTERVAL -18 YEAR )))
		THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Invalid Date of Birth';
        ELSE
		 SET NEW.Age = TIMESTAMPDIFF(YEAR, NEW.Date_of_birth, CURDATE());
	  END IF;
	  END;//
	delimiter ;

	/*Sc_f_of_pr field or Project doesnt exist*/ 
	delimiter //
	create trigger Sc_f_of_pr_check BEFORE insert on sc_field_of_project
	 for each row
	 BEGIN 
	  IF (NEW.Field_name  NOT IN (
	   SELECT Field_name FROM scientific_field)) 
	   THEN  SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Scientific Field doesnt Exist';
	  ELSEIF (NEW.project_id  NOT IN (
	   SELECT project_id FROM project)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Project doesnt Exist';
	  END IF;
	  END;//
	  
	delimiter ;
	/*Scientific_field*/ 
	delimiter //
	create trigger Sc_field_check BEFORE insert on scientific_field
	 for each row
	 BEGIN 
	  IF (NEW.Field_name  IN(
	   SELECT field_name FROM scientific_field))
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Scientific Field already Exists';
	   END IF;
	   END;//
	   delimiter ;
	   /*Works_on check*/ 
	delimiter //
	create trigger Works_on_check BEFORE insert on works_on
	 for each row
	  IF (NEW.project_id  NOT IN (
	   SELECT project_id FROM project)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Project doesnt Exist';
	  ELSEIF (NEW.researcher_id  NOT IN (
	   SELECT researcher_id FROM researcher)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Researcher doesnt Exist';
	  END IF;
	END;//
    delimiter ;
	/*Review*/ 
	delimiter //
	create trigger review_check BEFORE insert on review
	 for each row
	  IF (NEW.project_id  NOT IN (
	   SELECT project_id FROM project)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Project doesnt Exist';
	  ELSEIF (NEW.researcher_id  NOT IN (
	   SELECT researcher_id FROM researcher)) 
	   THEN  SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Researcher doesnt Exist';
	  ELSEIF (NEW.review_id  IN (
	   SELECT review_id FROM review))
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Review ID already exists';
	  ELSEIF (NEW.Writing_Date > (SELECT P.Starting_Date FROM project P
							WHERE NEW.project_id = P.project_id)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Invalid Review Date';
	  ELSEIF (NEW.Grade < 6 OR NEW.Grade > 10)
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Grade Lower than 6: Project not acceptable';
	  END IF;
	END;//
 delimiter ;
	/**executive triggers**/ 
	delimiter //
	create trigger exec_check BEFORE insert on executives
	 for each row
	 BEGIN 
	  IF (NEW.executive_id  IN(
	   SELECT E.executive_id FROM executive  E
       WHERE NEW.executive_id = E.executive_id))
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Executive already exists';
	   END IF;
	   END;//
	   delimiter ;
	  /**Deliverable triggers**/ 
	  delimiter //
	create trigger deliverable_check before insert on deliverable
	 for each row
	 BEGIN 
	  IF (NEW.title  IN (
	   SELECT title FROM deliverable)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Deliverable already exists';
	  ELSEIF (NEW.project_id  NOT IN (
	   SELECT project_id FROM project)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Project doesnt exist';
	  END IF;
	  END;//
      delimiter ;

	/*Program triggers*/ 
	delimiter //
	create trigger prog_check  BEFORE insert on program
	 for each row
	 BEGIN 
	  IF (NEW.Program_Name  IN(
	   SELECT P.Program_Name FROM program P
        WHERE NEW.Program_Name=P.Program_Name))
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Program already exists';
	   END IF;
	 END;
     //
     delimiter ; 
	   /**ORGANISATION TRIGGERS**/ 
	delimiter //
	create trigger org_check before insert on organization
	 for each row
	 BEGIN 
	  IF (NEW.Organization_Name  IN(
	   SELECT Organization_Name FROM organization))
	   THEN  SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Organization already exists';
	  ELSEIF(NEW.Organisation_budget < 500000)
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Budget lower than 500000';
	  ELSEIF( New.Kind <= 0 OR New.Kind > 3 )
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Organization is not a Company,University or Research Cenrtre';
	   END IF;
	 END;//
	delimiter ; 
	/**PROJECT TRIGGERS**/ 
	delimiter //
	create trigger proj_check before insert on project
	 for each row
	 BEGIN 
	  IF(NEW.project_id IN (
	   SELECT project_id FROM project))
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Project already exists';
	  ELSEIF (NEW.researcher_id  NOT IN (
	   SELECT researcher_id FROM researcher)) 
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Researcher doesnt exist';
	  ELSEIF (NEW.organization_name  NOT IN (
	   SELECT organization_name FROM organization)) 
	   THEN  SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Organization doesnt exist';
	  ELSEIF (NEW.executive_id NOT IN(
	   SELECT executive_id FROM executive))
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Executive doesnt exist';
	  ELSEIF (NEW.Program_Name NOT IN(
	   SELECT Program_Name FROM program))
	   THEN  SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Program doesnt exist';
	  ELSEIF(New.Funding_amount > 100000)
	   THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Funding amount too large (over 100000)';
	  ELSEIF( (NEW.Ending_date IS NOT NULL) AND (New.Starting_Date >= New.Ending_Date))
	  THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Invalid Starting/Ending Date';
	   ELSEIF(NEW.Ending_date  IS NOT NULL)
		THEN SET NEW.Duration = TIMESTAMPDIFF(MONTH, NEW.Starting_Date, NEW.Ending_Date);
	  ELSEIF ( NEW.Duration <12 OR NEW.Duration >48 AND NEW.Duration IS NOT NULL)
        THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='Project Duration must be between 1 - 4 Years';
      END IF;
	  END;//
	delimiter ;